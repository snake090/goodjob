package com.goodjob.member;

import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.goodjob.dao.CompanyDao;
import com.goodjob.dao.MemberDAO;
import com.goodjob.dto.Member;

/**
 * Servlet implementation class MemberRegistration
 */
@WebServlet("/MemberRegistration")
public class MemberRegistration extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public MemberRegistration() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.getWriter().append("Served at: ").append(request.getContextPath());
		//TODO 入力チェックにバクあり、二回以上登録ボタンを押すと落ちるバクあり,登録後参照を押すと落ちる
		String company_name=request.getParameter("companyName");
		String error="";
		Member member=new Member();		
		error=MemberInspection.StringInspection("協賛企業名", company_name);
		if(!"".equals(error)){
			errorShow(error, request, response,member);
		}
		member.setCompany_name(company_name);
		int companyid=CompanyDao.getCompanyId(company_name);
		System.out.println("companyid"+companyid);
		if(companyid>=0){
			String notes=request.getParameter("notes");
			System.out.println(notes);
			member.setNotes(notes);
			String member_number=request.getParameter("memberNo");
			System.out.println(member_number);
			error=MemberInspection.intInspection("会員番号", member_number);
			if(!"".equals(error)){
				errorShow(error, request, response,member);
			}
			int member_number_int=Integer.parseInt(member_number);
			member.setMember_number(member_number_int);
			
			String name=request.getParameter("name");
			System.out.println(name);
			error=MemberInspection.StringInspection("氏名", name);
			if(!"".equals(error)){
				errorShow(error, request, response,member);
			}
			member.setName(name);
			
			String furigana=request.getParameter("furigana");
			System.out.println(furigana);
			error=MemberInspection.StringInspection("フリガナ", furigana);
			if(!"".equals(error)){
				errorShow(error, request, response,member);
			}
			if (!furigana.matches("^[\\u30A0-\\u30FF]+$")) {
			    error="カタカナで入力してください";
			}
			if(!"".equals(error)){
				errorShow(error, request, response,member);
			}
			member.setFurigana(furigana);
			
			String job=request.getParameter("job");
			System.out.println(job);
			error=MemberInspection.StringInspection("所属名", job);
			if(!"".equals(error)){
				errorShow(error, request, response,member);
			}
			member.setJob(job);
			
			String phone_number=request.getParameter("phoneNumber");
			System.out.println(phone_number);
			error=MemberInspection.StringInspection("電話番号", phone_number);
			if(!"".equals(error)){
				errorShow(error, request, response,member);
			}
			member.setPhone_number(phone_number);
			
			String category=request.getParameter("category");
			System.out.println(category);
			error=MemberInspection.StringInspection("連絡先区分", category);
			if(!"".equals(error)){
				errorShow(error, request, response,member);
			}
			member.setCategory(category);
			
			String entry_date=request.getParameter("nichiji");
			System.out.println(entry_date);
			error=MemberInspection.StringInspection("入会日", entry_date);
			if(!"".equals(error)){
				errorShow(error, request, response,member);
			}
			Date date=null;
			try{
				SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
				date = format.parse(entry_date);  
			}catch (Exception e) {
				e.printStackTrace();
				error="dateに変換失敗";
			}
			if(!"".equals(error)){
				errorShow(error, request, response,member);
			}
			member.setEntry_date(date);


			String credit_amount=request.getParameter("creditAmount");
			System.out.println(credit_amount);
			error=MemberInspection.intInspection("与信額",credit_amount);
			if(!"".equals(error)){
				errorShow(error, request, response,member);
			}
			int credit=Integer.parseInt(credit_amount);
			member.setCredit_amount(credit);
			String comID=String.valueOf(companyid);
			String member_number_Check="SELECT COUNT (*) AS CNT FROM MEMBER"
					+ " WHERE COMPANY_ID="+comID+
					" AND MEMBER_NUMBER="+member_number;
			
			if(MemberDAO.memberCountExecuteQuery(member_number_Check)==0){
				String MemberInsert="INSERT INTO MEMBER VALUES"+
			"(DEFAULT,"+"'"+member_number+"'"+","+comID+","+"'"+name+"'"+","
						+"'"+furigana+"'"+","+"'"+job+"'"+","+"'"+phone_number+"'"+","
			+"'"+category+"'"+","+"'"+entry_date+"'"+","+credit_amount+","+"'"+
						notes+"'"+",DEFAULT )";
				MemberDAO.memberExecuteUpdate(MemberInsert);
				System.out.println("遷移");
				String MemberSearch="SELECT M.MEMBER_ID,M.MEMBER_NUMBER,M.COMPANY_ID,"
						+ "M.NAME,M.FURIGANA,M.JOB,M.PHONE_NUMBER,M.CATEGORY,"
						+ "M.ENTRY_DATE,M.CREDIT_AMOUNT,M.NOTES,C.COMPANY_NAME "
						+ "FROM MEMBER M  ,COMPANY C WHERE M.is_deleted =0 "
						+ " AND M.MEMBER_NUMBER="+member_number+ " AND M.COMPANY_ID=C.COMPANY_ID";
				Member member2=MemberDAO.searchMember(MemberSearch);
				request.setAttribute("sucsess", "登録しました");
				request.setAttribute("member2", member2);
				request.getRequestDispatcher("M1.jsp").forward(request, response);
				
			}else{
				error="会員番号が重複しています";
				errorShow(error, request, response,member);
			}
			

			
		}else{
			
			
		}
		
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
		
	}
	
	private void errorShow(String error,HttpServletRequest request, HttpServletResponse response,Member member)throws ServletException, IOException {
		request.setAttribute("member2", member);
		request.setAttribute("error", error);
		request.getRequestDispatcher("M3.jsp").forward(request, response);
	}

}
